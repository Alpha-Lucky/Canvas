{"version":3,"sources":["components/canvas/painting/accessories/Accordion/Accordion.module.css","components/common/Breadcrumbs/Breadcrumbs.tsx","components/common/Breadcrumbs/Breadcrumbs.module.css","components/canvas/painting/accessories/Accordion/Accordion.tsx","components/canvas/painting/accessories/ButtonGallary.tsx","components/canvas/painting/accessories/CanvasData.tsx","components/canvas/painting/genres/classic/landscapes/Landscapes.tsx","components/canvas/painting/genres/classic/landscapes/LandscapesContainer.tsx"],"names":["module","exports","Breadcrumbs","props","className","s","breadcrumbs__container","linkOne","to","linkTwo","breadcrumbs__active","activeLink","Accordion","styles","accordion_container","accordion_title","paintingName","price","description","meterial","size","title_event_accordion","ButtonGallary","buttonState","onClick","buttonBasket","id","imgName","sendBasketTh","removeStatus","classes__span","color","CanvasData","useState","modal","setModal","src","alt","effect","Modal","active","setActive","Landscapes","loading","setLoading","useEffect","timeoutOne","landscapes","Preloader","preloaderStatus","map","p","landscapesStatus","connect","state","canvasReduser"],"mappings":"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","file":"static/js/4.03a9dfd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordion_container\":\"Accordion_accordion_container__A2Ew_\",\"accordion_title\":\"Accordion_accordion_title__2XP1Z\",\"description__container\":\"Accordion_description__container__2qy2Y\",\"accordion_description\":\"Accordion_accordion_description__3BIh9\",\"show\":\"Accordion_show__y8sTp\",\"title_event_accordion\":\"Accordion_title_event_accordion__FlLLL\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Breadcrumbs.module.css'\r\n\r\ntype PropsType = {\r\n    linkOne?: string\r\n    linkTwo?: string\r\n    activeLink?: string\r\n}\r\n\r\nlet Breadcrumbs: React.FC<PropsType> = (props) => {\r\n    return(\r\n        <div className={s.breadcrumbs__container}>\r\n            <ul>\r\n                {props.linkOne &&\r\n                <li>\r\n                    <NavLink to=\"/Home\"><span>{props.linkOne}</span></NavLink> \r\n                    <span>/</span>\r\n                </li>\r\n                }\r\n                {props.linkTwo &&\r\n                <li>\r\n                    <NavLink to=\"/Gallery\"><span>{props.linkTwo}</span></NavLink>\r\n                    <span>/</span> \r\n                </li>\r\n                }\r\n                <li className={s.breadcrumbs__active}>\r\n                    <span>{props.activeLink}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Breadcrumbs","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs__container\":\"Breadcrumbs_breadcrumbs__container__2HIBD\",\"breadcrumbs__active\":\"Breadcrumbs_breadcrumbs__active__hPwJ9\"};","import React from \"react\";\r\nimport styles from \"./Accordion.module.css\"\r\n\r\ntype PropsType = {\r\n    id: number\r\n    paintingName: string\r\n    price: number\r\n    description : {\r\n        meterial: string\r\n        size: string\r\n    }\r\n}\r\n\r\nconst Accordion: React.FC<PropsType> = (props) => {\r\n    return(\r\n        <div className={styles.accordion_container}> \r\n            <div className={styles.accordion_title} >\r\n               <div >\r\n                    <li>{props.paintingName}</li>\r\n                    <li>{props.price} $ </li>\r\n                    <li>{props.description.meterial}</li>\r\n                    <li>{props.description.size}</li>  \r\n                </div>\r\n                \r\n                <div className={styles.title_event_accordion} >\r\n\r\n                </div> \r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accordion","import React from 'react';\r\nimport './../painting.css';\r\nimport { GiBasket } from \"react-icons/gi\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\n\r\ntype PropsType = {\r\n    buttonBasket: boolean\r\n    classes__span?: string\r\n    id: number\r\n    buttonState: boolean\r\n    imgName: string\r\n    paintingName: string\r\n    price: number\r\n    sendBasketTh: (id: number, imgName: string, paintingName: string, price: number) => void \r\n    removeStatus: (id: number) => void\r\n}\r\n\r\nconst ButtonGallary: React.FC<PropsType> = (props) => {\r\n\r\n    const addingPaitingInBasket = (id: number, imgName: string, paintingName: string, price: number) => {\r\n        return (\r\n        props.sendBasketTh(id, imgName, paintingName, price),\r\n        props.removeStatus(id)\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        props.buttonState\r\n            ? <div className=\"basket__gallary\">\r\n            <span className=\"button\" onClick={() => props.buttonBasket && addingPaitingInBasket(props.id,  props.imgName, props.paintingName, props.price)}>\r\n                <b> Add to <GiBasket size={19} /> </b>\r\n            </span>\r\n            </div> \r\n\r\n            : <div className={!props.buttonBasket ? \"basket__gallaryAnimate\" : \"basket__gallaryAnimate\"  }>\r\n            <span className={props.classes__span} >\r\n                <b><AiOutlineCheckCircle color='green' /> </b>\r\n            </span>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ButtonGallary","import React, { useState } from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport { PaitingsType } from \"../../../../redux/canvasData\";\r\nimport Modal from \"../../../common/Modal/Modal\";\r\nimport Accordion from \"./Accordion/Accordion\";\r\nimport ButtonGallary from \"./ButtonGallary\";\r\n\r\ntype PropsType = {\r\n    linkOne?: string\r\n    linkTwo?: string\r\n    activeLink?: string\r\n    sendBasketTh: (id: number, imgName: string, paintingName: string, price: number) => void \r\n    removeStatus: (id: number) => void\r\n}\r\n\r\nconst CanvasData: React.FC<PropsType & PaitingsType> = (props) => {\r\n    const [modal, setModal] = useState(false)\r\n    const [buttonBasket] = useState<boolean>(true)\r\n    \r\n    return (\r\n        <div className='contPainting'>\r\n            <div className=\"boxPainting\">\r\n                <div className=\"items__painting\">\r\n                    <div className=\"painting\">\r\n                        <LazyLoadImage onClick={() => setModal(true)} src={props.imgName} alt={props.imgName} effect=\"blur\" />\r\n                    </div> \r\n                    <ButtonGallary \r\n                    id={props.id} \r\n                    removeStatus={props.removeStatus} \r\n                    buttonBasket={buttonBasket} \r\n                    sendBasketTh={props.sendBasketTh} \r\n                    buttonState={props.buttonState} \r\n                    imgName={props.imgName} \r\n                    paintingName={props.paintingName} \r\n                    price={props.price} />\r\n                </div>\r\n                <div className=\"description\">\r\n                    <ul className=\"description__ul\">\r\n                                <Accordion \r\n                                id={props.id}  \r\n                                paintingName={props.paintingName} \r\n                                price={props.price} \r\n                                description={props.description} \r\n                                />\r\n                    </ul>\r\n                </div>\r\n                <Modal active={modal} setActive={setModal}>\r\n                    <img src={props.imgName} alt={props.imgName} />\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasData","import React, { useEffect, useState } from \"react\";\r\nimport CanvasData from \"../../../accessories/CanvasData\";\r\nimport Breadcrumbs from '../../../../../common/Breadcrumbs/Breadcrumbs'\r\nimport { PropsTypeLandscapes } from \"./LandscapesContainer\";\r\nimport { timeoutOne } from \"../../../../../common/timeout\";\r\nimport PreloaderOut from \"../../../../../common/Preloader/Preloader\";\r\n\r\nconst Landscapes: React.FC<PropsTypeLandscapes> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() =>{\r\n        timeoutOne(setLoading, 1150)\r\n    }, [props.landscapes])\r\n\r\n    return (\r\n        <div>\r\n        <PreloaderOut preloaderStatus={loading} />\r\n        <div className=\"this__garnes\">\r\n        <Breadcrumbs \r\n        linkOne=\"Main\"\r\n        linkTwo=\"Gallery\"\r\n        activeLink=\"Landscapes\"\r\n            />\r\n            {props.landscapes.map(p => {\r\n                return <CanvasData\r\n                    id={p.id}\r\n                    sendBasketTh={props.sendBasketTh}\r\n                    imgName={p.imgName}\r\n                    paintingName={p.paintingName}\r\n                    price={p.price}\r\n                    description={p.description}\r\n                    buttonState={p.buttonState}\r\n                    removeStatus={props.landscapesStatus}\r\n                />\r\n            })\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landscapes","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PaitingsType } from \"../../../../../../redux/canvasData\";\r\nimport {sendBasketTh, landscapesStatus } from \"../../../../../../redux/canvasReducer\";\r\nimport { AppStateType } from \"../../../../../../redux/store\";\r\nimport Landscapes from \"./Landscapes\";\r\n\r\ntype MapStateToProps = {\r\n    landscapes: Array<PaitingsType>\r\n}\r\ntype DispatchType = {\r\n    sendBasketTh: (id: number, imgName: string, paintingName: string, price: number) => void \r\n    landscapesStatus: (id: number) => void\r\n}\r\nexport type PropsTypeLandscapes = MapStateToProps &  DispatchType\r\n\r\n\r\nconst LandscapesContainer: React.FC<PropsTypeLandscapes> = (props) => {\r\n\r\n    return <Landscapes {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return{\r\n        landscapes: state.canvasReduser.landscapes\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToProps, DispatchType, {}, AppStateType>(mapStateToProps, {sendBasketTh, landscapesStatus})(LandscapesContainer)"],"sourceRoot":""}